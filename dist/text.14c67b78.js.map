{"version":3,"sources":["js/text.js"],"names":["TextScramble","el","chars","update","bind","newText","oldText","innerText","length","Math","max","promise","Promise","resolve","queue","i","from","to","start","floor","random","end","push","cancelAnimationFrame","frameRequest","frame","output","complete","n","char","randomChar","innerHTML","requestAnimationFrame","phrases","document","querySelector","fx","counter","next","setText"],"mappings":"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","file":"text.14c67b78.js","sourceRoot":"..","sourcesContent":["// ——————————————————————————————————————————————————\r\n// TextScramble\r\n// ——————————————————————————————————————————————————\r\n\r\nclass TextScramble {\r\n    constructor(el) {\r\n      this.el = el\r\n      this.chars = '|/[]'\r\n      this.update = this.update.bind(this)\r\n    }\r\n    setText(newText) {\r\n      const oldText = this.el.innerText\r\n      const length = Math.max(oldText.length, newText.length)\r\n      const promise = new Promise((resolve) => this.resolve = resolve)\r\n      this.queue = []\r\n      for (let i = 0; i < length; i++) {\r\n        const from = oldText[i] || ''\r\n        const to = newText[i] || ''\r\n        const start = Math.floor(Math.random() * 40)\r\n        const end = start + Math.floor(Math.random() * 40)\r\n        this.queue.push({ from, to, start, end })\r\n      }\r\n      cancelAnimationFrame(this.frameRequest)\r\n      this.frame = 0\r\n      this.update()\r\n      return promise\r\n    }\r\n    update() {\r\n      let output = ''\r\n      let complete = 0\r\n      for (let i = 0, n = this.queue.length; i < n; i++) {\r\n        let { from, to, start, end, char } = this.queue[i]\r\n        if (this.frame >= end) {\r\n          complete++\r\n          output += to\r\n        } else if (this.frame >= start) {\r\n          if (!char || Math.random() < 0.28) {\r\n            char = this.randomChar()\r\n            this.queue[i].char = char\r\n          }\r\n          output += `<span class=\"dud\">${char}</span>`\r\n        } else {\r\n          output += from\r\n        }\r\n      }\r\n      this.el.innerHTML = output\r\n      if (complete === this.queue.length) {\r\n        this.resolve()\r\n      } else {\r\n        this.frameRequest = requestAnimationFrame(this.update)\r\n        this.frame++\r\n      }\r\n    }\r\n    randomChar() {\r\n      return this.chars[Math.floor(Math.random() * this.chars.length)]\r\n    }\r\n  }\r\n  \r\n  // ——————————————————————————————————————————————————\r\n  // Example\r\n  // ——————————————————————————————————————————————————\r\n  \r\n  const phrases = [\r\n      'Ganhe uma presença digital relevante'\r\n  ]\r\n  \r\n  const el = document.querySelector(\".service-title\");\r\n  const fx = new TextScramble(el)\r\n  \r\n  let counter = 0\r\n  const next = () => {\r\n    fx.setText(phrases[counter])\r\n  }\r\n  \r\n  next()"]}